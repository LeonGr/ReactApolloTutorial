CREATE TABLE IF NOT EXISTS "_Migration" ("revision" INTEGER NOT NULL PRIMARY KEY, "name" TEX
T NOT NULL, "datamodel" TEXT NOT NULL, "status" TEXT NOT NULL, "applied" INTEGER NOT NULL, "
rolled_back" INTEGER NOT NULL, "datamodel_steps" TEXT NOT NULL, "database_migration" TEXT NO
T NULL, "errors" TEXT NOT NULL, "started_at" DATETIME NOT NULL, "finished_at" DATETIME);
CREATE TABLE IF NOT EXISTS "Link" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "description" TEXT NOT NULL,
    "url" TEXT NOT NULL,
    "postedById" INTEGER NOT NULL,

    FOREIGN KEY ("postedById") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE sqlite_sequence(name,seq);
CREATE TABLE IF NOT EXISTS "User" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "name" TEXT NOT NULL,
    "email" TEXT NOT NULL,
    "password" TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS "Vote" (
    "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "linkId" INTEGER NOT NULL,
    "userId" INTEGER NOT NULL,

    FOREIGN KEY ("linkId") REFERENCES "Link"("id") ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE UNIQUE INDEX "User.email_unique" ON "User"("email");
CREATE UNIQUE INDEX "Vote.linkId_userId_unique" ON "Vote"("linkId", "userId");
